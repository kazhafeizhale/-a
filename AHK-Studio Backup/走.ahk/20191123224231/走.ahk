;需要设置指定攻击为“y”
#NoEnv  ;4Recommended for performance and compatibility with future AutoHotkey releases.
; #Warn  ; Enable warnings to assist with detecting common errors.
SendMode Input  ; Recommended for new scripts due to its superior speed and reliability.
SetWorkingDir %A_ScriptDir%  ; Ensures a consistent starting directory.
;#IfWinActive ahk_class RiotWindowClass
Gui, Add, Text,, 攻击前摇:
Gui, Add, Text,, 面板攻速:
Gui, Add, Edit, vhitForwardShakeTime ym  ; ym 选项开始一个新的控件列.
Gui, Add, Edit, vAttackSpeedTime
Gui, Add, Button, default, OK  ; ButtonOK(如果存在)会在此按钮被按下时运行.
gui,+AlwaysOnTop  +hWndhMainWnd +Resize
Gui, Show,, Simple Input Example
return


ButtonOK:
Gui, Submit  ; 保存用户的输入到每个控件的关联变量中.
return

*f7::
if(WinActive("ahk_id" . hMainWnd))
{
	Gui,1: Hide
}
else
{
	Gui,1: Restore        
}
return

#NoEnv
#KeyHistory 0
#MaxThreads 255
#MaxMem 4095
#MaxThreadsBuffer On
#MaxHotkeysPerInterval 99000000
#HotkeyInterval 99000000
ListLines Off
Process, Priority, , R
SetTitleMatchMode fast
SetBatchLines, -1
SetKeyDelay, -1, -1, -1
SetMouseDelay, -1
SetWinDelay, -1
SetControlDelay, -1
SetDefaultMouseSpeed, 0

; Generated by AutoGUI 2.5.4
#SingleInstance Force
CoordMode, ToolTip , Screen



time=30
$a::
SendInput,x
sleep,time
SendInput,a
return


~$*Space::
while (GetKeyState("Space","P"))
{
;BlockInput,on   
SendInput,a
sleep,% hitForwardShakeTime
;BlockInput,off
starttime:=A_TickCount
while(A_TickCount-starttime<(1000/AttackSpeedTime-hitForwardShakeTime))
{    
    SendInput,{RButton}
    SendInput,x
    sleep,50

}
}
Return


~f5::
Suspend
if(A_IsSuspended==0)
{
    SoundPlay("启动")
}
Else
{
    SoundPlay("暂停")   
}
Return
SoundPlay(sound)
{
        SoundPlay, %A_ScriptDir%\config\music\%sound%.mp3   
}